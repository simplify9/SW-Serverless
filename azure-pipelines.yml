name: $(version)

trigger:
- master

resources:
- repo: self

pool:
  vmImage: 'windows-latest'

variables:
  - group: S3Bucket
  - name: buildConfiguration
    value: 'Release'
  - name: major
    value: 8
  - name: minor
    value: 0
  - name: version
    value: $[format('{0}.{1}.{2}', variables['major'], variables['minor'], counter(format('{0}.{1}', variables['major'], variables['minor']), 0))]


steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk 6.0.x'
    inputs:
      packageType: sdk
      version: '6.0.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - task: DotNetCoreCLI@2
    displayName: Restore
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: Build
    inputs:
      projects: '**/*.csproj'
      arguments: '--configuration $(BuildConfiguration)'

  - task: qetza.replacetokens.replacetokens-task.replacetokens@3
    displayName: 'Replace tokens'
    inputs:
      targetFiles: |
        **/*.json

#  - task: DotNetCoreCLI@2
#    displayName: 'dotnet test'
#    inputs:
#      command: test
#      projects: '**/*Tests/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'dotnet pack'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      command: pack
      packagesToPack: 'SW.Serverless/SW.Serverless.csproj;SW.Serverless.Sdk/SW.Serverless.Sdk.csproj;'
      nobuild: true
      versioningScheme: byBuildNumber

  - task: NuGetCommand@2
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    inputs:
      command: 'push'
      packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
      nuGetFeedType: 'external'
      publishFeedCredentials: 'swnuget' 